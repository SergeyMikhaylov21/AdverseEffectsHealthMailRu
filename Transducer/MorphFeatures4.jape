/*
* Copyright (c) 1998-2001, The University of Sheffield.
*
*  This file is part of GATE (see http://gate.ac.uk/), and is free
*  software, licenced under the GNU Library General Public License,
*  Version 2, June 1991 (in the distribution as file licence.html,
*  and also available at http://gate.ac.uk/gate/licence.html).
*
*
*  MorphFeatures4.jape
*
*  Sergey Mikhaylov, 22 May 2018
*
*  $Id: MorphFeatures4.jape,v 1.17 2018-05-19 13:45:00 S_Mikhaylov $
*/


Phase: MorphFeatures4
Input: Morph Split Lookup
Options: control = appelt


Rule: DisturbSingleWords

(
	(
		({Morph.baseForm == "повышаться"} | {Morph.baseForm == "подниматься"} | {Morph.baseForm == "подняться"}
		| {Morph.baseForm == "понижаться"} | {Morph.baseForm == "опухнуть"} | {Morph.baseForm == "хромать"}
		| {Morph.baseForm == "беспокоить"} | {Morph.baseForm == "понизиться"} | {Morph.baseForm == "ускориться"}
		| {Morph.baseForm == "ухудшаться"} | {Morph.baseForm == "участиться"} | {Morph.baseForm == "ухудшиться"}
		| {Morph.baseForm == "учащение"} | {Morph.baseForm == "чувствовать"} | {Morph.baseForm == "почувствовать"}
		| {Morph.baseForm == "испытывать"} | {Morph.baseForm == "ощутить"} | {Morph.baseForm == "ощущать"}
		| {Morph.baseForm == "испытать"} | {Morph.baseForm == "высыпать"} | {Morph.baseForm == "покраснеть"}
		| {Morph.baseForm == "отекать"} | {Morph.baseForm == "стошнить"} | {Morph.baseForm == "чесаться"})
	): Feat
): FullFeat
-->
{
String text = null;

//System.out.println ("===== rule DisturbSingleWords ======");
	AnnotationSet Feat_Set = (AnnotationSet)bindings.get("Feat");
	FeatureMap Feat_Feat = Factory.newFeatureMap();
	try {
			text = (String) doc.getContent().getContent(Feat_Set.firstNode().getOffset(),Feat_Set.lastNode().getOffset()).toString();
		}
		catch(gate.util.InvalidOffsetException e) {
			throw new java.lang.IndexOutOfBoundsException(e.toString());
		}
	Feat_Feat.put("string", text);
	outputAS.add(Feat_Set.firstNode(), Feat_Set.lastNode(), "DisturbSingleWords_Feat", Feat_Feat);
}

Rule: PainVerbsMorph

(
	(
		({Morph.baseForm == "болеть"} | {Morph.baseForm == "ныть"} | {Morph.baseForm == "побаливать"}
		{Morph.baseForm == "тянуть"} | {Morph.baseForm == "колоть"} | {Morph.baseForm == "пульсировать"}
		| {Morph.baseForm == "мучиться"} | {Morph.baseForm == "промучиться"} | {Morph.baseForm == "осложнение"}
		| {Morph.baseForm == "отниматься"})
	): Feat
): FullFeat
-->
{
String text = null;

//System.out.println ("===== rule PainVerbsMorph ======");
	AnnotationSet Feat_Set = (AnnotationSet)bindings.get("Feat");
	FeatureMap Feat_Feat = Factory.newFeatureMap();
	try {
			text = (String) doc.getContent().getContent(Feat_Set.firstNode().getOffset(),Feat_Set.lastNode().getOffset()).toString();
		}
		catch(gate.util.InvalidOffsetException e) {
			throw new java.lang.IndexOutOfBoundsException(e.toString());
		}
	Feat_Feat.put("string", text);
	outputAS.add(Feat_Set.firstNode(), Feat_Set.lastNode(), "PainVerbsMorph_Feat", Feat_Feat);
}